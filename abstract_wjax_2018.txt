
Auf Basis der Java Virtual Machine hat sich in den letzten 20 Jahren eine große Zahl an alternativen Programmiersprachen
entwickelt. Diese Sprachen haben jeweils ihre eigene Syntax, werden aber in JVM-Bytecode übersetzt.
Damit können sie auf der ausgereiften und vielfach optimierten JVM ausgeführt werden.
In diesem Vortrag wollen wir zwei populäre derartige Sprachen betrachten und miteinander vergleichen:
Groovy und Kotlin.

Apache Groovy entstand bereits 2003 mit dem Ziel, eine elegantere Syntax mit dynamischen Elementen zu verbinden.
Kotlin wurde 2011 erstmalig vorgestellt, im Jahr 2016 erschien die Version 1.0.
Die Sprache wird federführend vom Tool-Hersteller JetBrains entwickelt und addressiert ebenfalls typische Java-Probleme.

Beide Sprachen haben viele Sprachfeatures, die über die Möglichkeiten von Java hinausgehen.
Hier gibt es erstaunlich viele Gemeinsamkeiten,
aber durchaus auch signifikante Unterschiede.
Im Einzelnen wollen wir folgende Themen betrachten:

- Typisierung und Typinferenz, Nullsicherheit
- Exceptions
- Delegation, Vererbung und Extensions
- Properties und Data-Klassen
- benannte und Default-Argumente
- Collections-Syntax
- Operator-Overloading
- Funktionale Programmierung, insbesondere Higher Order-Functions


Beim Vergleich werden wir immer wieder einen Blick in Richtung der Muttersprache Java werfen.
Ziel des Vortrags ist es, beiden Sprachen insbesondere mit Blick auf die angebotenen Sprachkonstrukte kennenzulernen.
Vielleicht lohnt es ist ja, eine der beiden im nächsten Projekt einzusetzen.
