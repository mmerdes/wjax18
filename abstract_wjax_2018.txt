
ACHTUNG: work in progress - bitte noch nicht kommentieren/editieren!!
ACHTUNG: work in progress - bitte noch nicht kommentieren/editieren!!
ACHTUNG: work in progress - bitte noch nicht kommentieren/editieren!!


Spieglein, Spieglein an der Wand...
Ein Vergleich der beiden JVM-Sprachen Groovy und Kotlin


Auf Basis der Java Virtual Machine hat sich in den letzten 20 Jahren eine große Zahl an alternativen Programmiersprachen
entwickelt. Diese Sprachen haben jeweils ihre eigene Syntax, werden aber in JVM-Bytecode übersetzt.
Damit können sie auf der ausgereiften und vielfach optimierten Java Virtual Machine ausgeführt werden.

In diesem Vortrag wollen wir zwei populäre derartige Sprachen betrachten und miteinander vergleichen:
Groovy und Kotlin.

Groovy wurde bereits ab 2003 entwickelt und hatte zum Ziel eine elegantere Syntax mit aus Ruby bekannten Elementen zu verbinden.
Seit xxxx wird Groovy unter dem Dach der Apache Software Foundation entwickelt,
was zu einem weiteren Anstieg der Downloadzahlen geführt hat.

Kotlin wird von Jetbrains xxx entwickelt, vielen Java-Entwicklern bekannt als Hersteller der IDE Intellij.

- Lizenzen und Java-Interoperabilität
- ide-support
- build-tools wie gradle
- Anwendungsgebiete (Android!)


Beiden Sprachen ist gemein,
dass sie viele Sprachfeatures haben, die über die Möglichkeiten von Java hinausgehen.
Hier gibt es erstaunlich viele Gemeinsamkeiten zwischen beiden Sprachen,
aber durchaus auch signifikante Unterschiede.
Im Einzelnen wollen wir folgende Themen vergleichend betrachten:

- checked Exceptions
- Typisierung und Typinferenz, primitive Typen
- delegation
- Properties
- Data-Klassen
- Vererbung
- Erweiterung existierende Klassen, sogar von JDK-Klassen
- Nullsicherheit
- Funktionale Programmierung, insbesondere Higher Order-Functions und Komposition
- benannte und Default-Argumente
- (Literale) Syntax für Listen und Maps
- Operator Overloading

Immer wieder einen Blick in Richtung der Muttersprache Java werfen


// Tail Recursion, Coroutines...




